[
["index.html", "afdfdafdafsd Preface", " afdfdafdafsd Matthew Crump 2018-03-13 Preface This is a tutorial and set of working examples for creating web-based textbooks using a collection of open-source tools. This web-book is itself a working example. All of the source code needed to compile this book yourself is included in the github repository for this book. So, you could download the repository, and by following the instructions laid out across the chapters, replace this text with your own, and then compile your book as a web-page, .pdf or epub. "],
["asdfasdf.html", "Chapter 1 asdfasdf 1.1 akfhskfjghskjfdhgfdsgsfd", " Chapter 1 asdfasdf aldsjfhadlkjfhadsf adf asdf asd fads f adsf ads fads 1.1 akfhskfjghskjfdhgfdsgsfd a dfa dsf as df asdf "],
["chapter-2.html", "Chapter 2 chapter 2", " Chapter 2 chapter 2 asdf as df asdf ad sf "],
["adfdsfads.html", "Chapter 3 adfdsfads", " Chapter 3 adfdsfads a asdf ads fads f adsf ads fads f s "],
["github.html", "Chapter 4 Github 4.1 Getting Started 4.2 Repository workflow 4.3 Creating a new repository on Github.com 4.4 Cloning a copy on your computer 4.5 Make changes to the repository 4.6 Update the online github repository", " Chapter 4 Github To quote from wikipedia, “Github is a Web-based Git version control repository hosting service. It is mostly used for computer code.”— and I would add, many other things. The purpose of this chapter is to describe how Github can be used to serve your web-book (compiled using bookdown), and to share the source code so that others can duplicate and modify your book, or so that others can contribute content to your existing book. 4.1 Getting Started 4.1.1 Make an account with Github To get started with Github you need to create a free account. You should see a sign up option on the main page. Your account now consists of your profile page (where you can add information about yourself), and an empty list of repositories. Repositories are Github file folders. They can be purely cloud-based; for example, you can create a repository then add files to it through the web-based interface. You can also create a copy of each repository on your local computer, make changes to the repository on your local computer, and then merge those changes with the online repository. 4.1.2 Install Github Desktop Github has provided a free and convenient tool for using your local computer to interface with the web-based version of Github. To use the tool, download and install the desktop app for Github. Once the app is installed, make sure that you connect it to your Github account so that you can access repositories that you create. 4.2 Repository workflow We will use the following workflow: Create a new empty repository on the Github Website Clone the repository to your local computer Add files to the repo on your local computer (work locally) Merge the files back to the Github Website (share final versions) 4.3 Creating a new repository on Github.com Log in to Github.com In the top right corner of the page, click the “+” icon Choose new repository Give it a short name You have a few other options that you can revisit later Click create repository 4.4 Cloning a copy on your computer Open the Github desktop app Login in to your Github account Choose the clone repository option Find the name of the repository you created on Github and select it. Github Desktop will now download the contents of the repository and save it locally (in the file folder of your choice) on your computer 4.5 Make changes to the repository If you are on a mac, choose “show in finder”. You can now edit any of the files locally 4.6 Update the online github repository Any time you change a file, git will track all of the changes that you make To submit changes, choose the commit button All of your changes will now be uploaded to the online repository. "],
["hypothes-is.html", "Chapter 5 Hypothes.is 5.1 A case study example 5.2 hypothesisr 5.3 Hypothesis Explorer 5.4 Downloading annotations 5.5 Viewing the annotations Search and subset the database", " Chapter 5 Hypothes.is Hypothes.is is a web-browser add-on for annotating the web via inline commenting. This allows anyone to select a snippet of text in a web-browser and then post a comment about the selected text. Annotations can be made publicly or privately. All public annotations can be viewed by anyone else running hypothesis on the same website. Using Hypothesis with your web-book allows you to engage students in interacting with the textbook by allowing them to contribute to content generation (by posting new content), or content revision (by tagging sections in need of revision). If you publish your bookdown book as a webpage, then you anyone with Hypothes.is can use it to annotate the textbook. 5.1 A case study example I recently compiled a Research Methods in Psychology textbook using the tools described in this tutorial. The landing page describes how Hypothes.is can be used in conjunction with the textbook. In class I assigned students the task of downloading Hypothes.is, creating a Hypothes.is account, and then throughout the course gave them various assignments where they were responsible for annotating parts of the textbook. For example, in one assignment I had students annotate sections of the textbook that were in need of improvement. This allows students to participate in content revision as they read the textbook. Other assignments could include focused online discussion about textbook content using annotations, or using annotations as a way for students to add content to the textbook. 5.2 hypothesisr hypothesisr is an r package for scraping annotation data collected through the hypothesis app. All public annotations submitted through hypothesis to any website are publically available for download. As a result, the hypothesisr package can be used to download and process the annotations submitted to your website. 5.3 Hypothesis Explorer As a part of this project, we have created a Shiny app that conveniently displays and manipulates hypothesis annotation databases in a website. The Shiny app is located in this github repository, https://github.com/CrumpLab/hypothesis_explorer 5.3.1 Running the spp To run this app you need to have R and R-Studio installed on your computer. You will also need to have downloaded the Shiny and hypothesisr packages. You can run the app by either of the following methods You can download the hypothesis_explorer repository as a .zip file, then open the server.r, or ui.r files in R-studio and click run-app You can have R-studio automatically download and the run app using by entering the following in the command line shiny::runGitHub('hypothesis_explorer', 'CrumpLab') 5.4 Downloading annotations The Hypothesis Explorer app currently implements two main functions: downloading and displaying/searching parts of the publicly avialable Hypothes.is annotation database. Download the annotation database associated with a website: Type in the name of the website in the search bar. To see an example, enter “crumplab” into the website search and click the download button. NOTE OF CAUTION We use the hypothesisr package to scrape parts of the entire Hypothes.is annotation database. As a result, there are some nuances in searching for particular websites that may cause you to accidentally download all of the annotations to a global domain rather than to a particular website. For example, I have two web-books published on my github domain, these are: https://www.crumplab.github.io/ResearchMethods https://www.crumplab.github.io/programmingforpsych I am interested in using the Shiny app to look at only the annotations associated with these two websites. Using “crumplab” as the website will download all of the annotations associated with all subdomains on the site, so it will download annotations for both textbooks. On the other hand, including global domain information by searching “crumplab.github.io” will cause an attempt to download all annotations associated with the entire github domain, which will cause the Shiny app to crash. 5.5 Viewing the annotations Search and subset the database Hypothesis explorer should automatically download any annotations associated with the website that you entered. At the moment, we have only tested this for websites built with github pages. After the annotation database has been downloaded the two viewable tabs “Summary”, and “Data” will be autopopulated. The Summary tab gives an overview of the top annotated documents, pages, tags and users. The Data tab presents the entire database. 5.5.1 Viewing all the variables in the database The left-hand panel includes a “Variables (in Data View)” text box. Click into the box to see all of the names of each variable (column names) in the database. Clicking one of the variable names will add it to the list, and automatically display the content of that column in the database viewer. Likewise, deleting variable names will hide those columns from being displayed. 5.5.2 Subsetting the data For quickly collapsing aspects of the data by row information, we have four subsetting operations, for displaying only annotations associated with particular documents (e.g., entire books), pages (chapters within a book), tags (associated with each annotation), and users. 5.5.3 Voting feature When a user submits an annotation, other users can post comments underneath the annotation. For example, if a student highlights a section of the textbook and comments that this section should be improved, another student could reply to the original comment. We have implemented a rudimentary comment voting system using these features of hypothes.is. For example, up/down style voting can be implemented by instructing users to vote by using the reply feature. Specifically, up votes can be registered by replying with a numeric value of 1, and down votes can be registered by replying with a numeric value of -1. Hypothesis Explorer automatically looks for any child posts that contain 1s or -1s, counts the total vote for each parent comment, and then displays the count in a column variable called “votes”. "],
["zotero.html", "Chapter 6 Zotero 6.1 Getting Started 6.2 Populating Zotero with references 6.3 Generating a .bib file 6.4 Citing references in an RMarkdown file", " Chapter 6 Zotero Zotero is a free, cross-platform tool to help you collect, organize, cite, and share your research sources. Zotero is similar to Mendeley or EndNote. The purpose of this chapter is to show how Zotero can be used as a reference manager to allow you to cite works in your book, and automatically compile bibliographies or reference sections. The bookdown package uses Latex bibliography files to generate citations and create bibliographies. These .bib files are text-based files with a specific syntax for coding the relevant information in a citation. Each citation in a .bib file has an associated key that is inserted into an Rmarkdown document to generate a citation. We will use Zotero to avoid writing our own .bib from scratch. Instead, there are convenient methods for populating Zotero with a database of references, and for compiling a .bib file from a Zotero databse that can be used in bookdown. 6.1 Getting Started Create an account with Zotero, click register in the top-right corner Download the Zotero Desktop app Download the Zotero Connector extension for your web-browser Zotero operates on the cloud as well as on your desktop. You can connect your online Zotero account with your desktop app in the preferences. 6.2 Populating Zotero with references There are multiple ways to import references into Zotero. In the Zotero desktop app you can create folders to organize your references. 6.2.1 Drag and Drop .pdfs Create a new folder and name it Drag and drop .pdfs into the folder Highlight the .pdfs, then right-click, and choose “retrieve metadata for pdf”. For most journal articles, Zotero will be able to automatically find the citation information for your .pdf. This will convert the .pdf into a Zotero citation that includes both the citation information, as well as the .pdf 6.2.2 Import citations and pdfs from the web Ensure that your Desktop app is open, and that you have installed the Zotero plugin for your web-browser Use google scholar to search for an article Click the Zotero button in your web-browser You should see a list of all of the articles on the google scholar page. Click any or all the articles you want to import, then import them Zotero will download the citation information along with any associated .pdf to the current folder that is open in the Zotero desktop app. Zotero is fairly flexible, so the above process will generally work when you are accessing many different databases, and journal web-pages for specific articles. 6.2.3 A note of caution The citation information that Zotero downloads is sometimes inaccurate. Be sure to check the fields for each of your citations to ensure they are accurate. For example, page ranges are often missing. 6.3 Generating a .bib file Right-click a Zotero folder Choose “Export Collection” Choose “Bibtex” Save the file Copy the file into the folder for your bookdown project add the file to the bibliography line in the Index.Rmd file. 6.4 Citing references in an RMarkdown file Citations are add using the following format @citationkey, or [@citationkey] to place the author,year citation in parentheses. The citation key name is listed for each citation in the bib file. Here are a couple of links with some additional examples: examples from bookdown, and examples from RMarkdown. The source code for this book contains two .bib files: book.bib and packages.bib. Each citation in those files has an associated citation key. Here is an example of citing the bookdown package (Xie 2015). This is an example of citing R-core team (R Core Team 2016) 6.4.1 Cite while you write A minor inconvenience when using .bib for citations in Rmarkdown is that you have to know the citation key, and these are easy to forget. One option is to load up your .bib file, then search through it to find the citation key. Another option is to download and install the citr package. Once this package is installed, you can use its cite while your write feature. Click the tools menu, addins, then, insert citations. This will open up a window showing all of the citations in your bib files. You can click multiple citations, and then insert the citation keys into your Rmarkdown document. This is convenient method for quickly finding needed citation keys. I recommend first openining the index.rmd file (which points to your .bib files), and then opening the insert citations tools; this will allow the tool to find your .bib files. After this point, you should be able to use the tool when you are working within .Rmd files for each chapter. References "],
["references.html", "References", " References "]
]
